#lang Racket


(define-syntax let**
  (syntax-rules (def:)
    ((let** (var) def: default expr ...)
     ((lambda (var)
       expr ...) default))
    ((let** ((var val)) def: default expr ...)
     ((lambda (var)
        expr ...) val))
    ((let** ((var val) . rest) def: default expr ...)
     ((lambda (var)
        (let** rest def: val expr ...)) val))
    ((let** (var . rest) def: default expr ...)
     ((lambda (var)
        (let** rest def: default expr ...)) default))))
    


(let** (a) def: 3
       a)

(let** (a (c 1) b) def: 3
       (displayln a)
       (displayln b)
       (displayln c))

